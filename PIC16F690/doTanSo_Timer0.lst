CCS PCM C Compiler, Version 5.015, 5967               14-Jul-19 23:54

               Filename:   D:\Desktop\DATN\CODE\PIC16F690\doTanSo_Timer0.lst

               ROM used:   736 words (18%)
                           Largest free fragment is 2048
               RAM used:   31 (12%) at main() level
                           47 (19%) worst case
               Stack used: 3 locations (1 in main + 2 for interrupts)
               Stack size: 8

*
0000:  MOVLW  02
0001:  MOVWF  0A
0002:  GOTO   275
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  25
0008:  MOVF   7F,W
0009:  MOVWF  24
000A:  MOVF   0A,W
000B:  MOVWF  2F
000C:  CLRF   0A
000D:  SWAPF  24,F
000E:  MOVF   04,W
000F:  MOVWF  26
0010:  MOVF   20,W
0011:  MOVWF  27
0012:  MOVF   21,W
0013:  MOVWF  28
0014:  MOVF   22,W
0015:  MOVWF  29
0016:  MOVF   23,W
0017:  MOVWF  2A
0018:  BSF    03.6
0019:  MOVF   0D,W
001A:  BCF    03.6
001B:  MOVWF  2B
001C:  BSF    03.6
001D:  MOVF   0F,W
001E:  BCF    03.6
001F:  MOVWF  2C
0020:  BSF    03.6
0021:  MOVF   0C,W
0022:  BCF    03.6
0023:  MOVWF  2D
0024:  BSF    03.6
0025:  MOVF   0E,W
0026:  BCF    03.6
0027:  MOVWF  2E
0028:  BCF    03.7
0029:  BCF    03.5
002A:  MOVLW  8C
002B:  MOVWF  04
002C:  BTFSS  00.0
002D:  GOTO   030
002E:  BTFSC  0C.0
002F:  GOTO   055
0030:  BTFSS  0B.3
0031:  GOTO   034
0032:  BTFSC  0B.0
0033:  GOTO   057
0034:  MOVF   26,W
0035:  MOVWF  04
0036:  MOVF   27,W
0037:  MOVWF  20
0038:  MOVF   28,W
0039:  MOVWF  21
003A:  MOVF   29,W
003B:  MOVWF  22
003C:  MOVF   2A,W
003D:  MOVWF  23
003E:  MOVF   2B,W
003F:  BSF    03.6
0040:  MOVWF  0D
0041:  BCF    03.6
0042:  MOVF   2C,W
0043:  BSF    03.6
0044:  MOVWF  0F
0045:  BCF    03.6
0046:  MOVF   2D,W
0047:  BSF    03.6
0048:  MOVWF  0C
0049:  BCF    03.6
004A:  MOVF   2E,W
004B:  BSF    03.6
004C:  MOVWF  0E
004D:  BCF    03.6
004E:  MOVF   2F,W
004F:  MOVWF  0A
0050:  SWAPF  25,W
0051:  MOVWF  03
0052:  SWAPF  7F,F
0053:  SWAPF  7F,W
0054:  RETFIE
0055:  BCF    0A.3
0056:  GOTO   112
0057:  BCF    0A.3
0058:  GOTO   059
.................... #include <16F690.h> 
.................... //////////// Standard Header file for the PIC16F690 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F690 
*
0060:  MOVF   0B,W
0061:  MOVWF  42
0062:  BCF    0B.7
0063:  BSF    03.5
0064:  BSF    03.6
0065:  BSF    0C.7
0066:  BSF    0C.0
0067:  NOP
0068:  NOP
0069:  BCF    03.5
006A:  BCF    03.6
006B:  BTFSC  42.7
006C:  BSF    0B.7
006D:  BTFSC  03.0
006E:  GOTO   098
006F:  BSF    03.6
0070:  MOVF   0C,W
0071:  ANDLW  7F
0072:  BCF    03.6
0073:  MOVWF  42
0074:  BSF    03.6
0075:  MOVF   0D,W
0076:  BCF    03.6
0077:  MOVWF  43
0078:  BSF    03.6
0079:  MOVF   0F,W
007A:  BCF    03.6
007B:  MOVWF  44
007C:  MOVF   42,W
007D:  BTFSS  0C.4
007E:  GOTO   07D
007F:  MOVWF  19
0080:  MOVF   43,W
0081:  BSF    03.6
0082:  MOVWF  0D
0083:  BCF    03.6
0084:  MOVF   44,W
0085:  BSF    03.6
0086:  MOVWF  0F
0087:  BCF    03.6
0088:  MOVF   0B,W
0089:  MOVWF  45
008A:  BCF    0B.7
008B:  BSF    03.5
008C:  BSF    03.6
008D:  BSF    0C.7
008E:  BSF    0C.0
008F:  NOP
0090:  NOP
0091:  BCF    03.5
0092:  BCF    03.6
0093:  BTFSC  45.7
0094:  BSF    0B.7
0095:  DECFSZ 41,F
0096:  GOTO   098
0097:  GOTO   0B8
0098:  BSF    03.6
0099:  RLF    0C,W
009A:  RLF    0E,W
009B:  ANDLW  7F
009C:  BCF    03.6
009D:  MOVWF  42
009E:  BSF    03.6
009F:  MOVF   0D,W
00A0:  BCF    03.6
00A1:  MOVWF  43
00A2:  BSF    03.6
00A3:  MOVF   0F,W
00A4:  BCF    03.6
00A5:  MOVWF  44
00A6:  MOVF   42,W
00A7:  BTFSS  0C.4
00A8:  GOTO   0A7
00A9:  MOVWF  19
00AA:  MOVF   43,W
00AB:  BSF    03.6
00AC:  MOVWF  0D
00AD:  BCF    03.6
00AE:  MOVF   44,W
00AF:  BSF    03.6
00B0:  MOVWF  0F
00B1:  INCF   0D,F
00B2:  BTFSC  03.2
00B3:  INCF   0F,F
00B4:  BCF    03.0
00B5:  BCF    03.6
00B6:  DECFSZ 41,F
00B7:  GOTO   060
00B8:  RETURN
00B9:  CLRF   49
00BA:  MOVF   04,W
00BB:  MOVWF  48
00BC:  BCF    49.0
00BD:  BTFSC  03.7
00BE:  BSF    49.0
00BF:  SWAPF  42,W
00C0:  IORLW  F0
00C1:  MOVWF  44
00C2:  ADDWF  44,F
00C3:  ADDLW  E2
00C4:  MOVWF  45
00C5:  ADDLW  32
00C6:  MOVWF  47
00C7:  MOVF   42,W
00C8:  ANDLW  0F
00C9:  ADDWF  45,F
00CA:  ADDWF  45,F
00CB:  ADDWF  47,F
00CC:  ADDLW  E9
00CD:  MOVWF  46
00CE:  ADDWF  46,F
00CF:  ADDWF  46,F
00D0:  SWAPF  41,W
00D1:  ANDLW  0F
00D2:  ADDWF  46,F
00D3:  ADDWF  47,F
00D4:  RLF    46,F
00D5:  RLF    47,F
00D6:  COMF   47,F
00D7:  RLF    47,F
00D8:  MOVF   41,W
00D9:  ANDLW  0F
00DA:  ADDWF  47,F
00DB:  RLF    44,F
00DC:  MOVLW  07
00DD:  MOVWF  43
00DE:  MOVLW  0A
00DF:  ADDWF  47,F
00E0:  DECF   46,F
00E1:  BTFSS  03.0
00E2:  GOTO   0DF
00E3:  ADDWF  46,F
00E4:  DECF   45,F
00E5:  BTFSS  03.0
00E6:  GOTO   0E3
00E7:  ADDWF  45,F
00E8:  DECF   44,F
00E9:  BTFSS  03.0
00EA:  GOTO   0E7
00EB:  ADDWF  44,F
00EC:  DECF   43,F
00ED:  BTFSS  03.0
00EE:  GOTO   0EB
00EF:  MOVLW  43
00F0:  MOVWF  04
00F1:  BCF    03.7
00F2:  MOVLW  07
00F3:  ANDWF  48,W
00F4:  BCF    48.6
00F5:  ADDWF  04,F
00F6:  MOVLW  47
00F7:  SUBWF  04,W
00F8:  BTFSC  03.2
00F9:  BSF    48.6
00FA:  MOVF   00,W
00FB:  MOVWF  20
00FC:  BTFSS  03.2
00FD:  GOTO   106
00FE:  BTFSC  48.6
00FF:  GOTO   106
0100:  BTFSC  48.4
0101:  GOTO   10E
0102:  BTFSC  48.3
0103:  GOTO   106
0104:  MOVLW  20
0105:  GOTO   109
0106:  BSF    48.3
0107:  BCF    48.4
0108:  MOVLW  30
0109:  ADDWF  20,F
010A:  MOVF   20,W
010B:  BTFSS  0C.4
010C:  GOTO   10B
010D:  MOVWF  19
010E:  INCF   04,F
010F:  BTFSS  48.6
0110:  GOTO   0F6
0111:  RETURN
*
013E:  BTFSC  03.1
013F:  GOTO   143
0140:  MOVLW  49
0141:  MOVWF  04
0142:  BCF    03.7
0143:  CLRF   20
0144:  CLRF   21
0145:  CLRF   22
0146:  CLRF   23
0147:  CLRF   49
0148:  CLRF   4A
0149:  CLRF   4B
014A:  CLRF   4C
014B:  MOVF   48,W
014C:  IORWF  47,W
014D:  IORWF  46,W
014E:  IORWF  45,W
014F:  BTFSC  03.2
0150:  GOTO   181
0151:  MOVLW  20
0152:  MOVWF  4D
0153:  BCF    03.0
0154:  RLF    41,F
0155:  RLF    42,F
0156:  RLF    43,F
0157:  RLF    44,F
0158:  RLF    49,F
0159:  RLF    4A,F
015A:  RLF    4B,F
015B:  RLF    4C,F
015C:  MOVF   48,W
015D:  SUBWF  4C,W
015E:  BTFSS  03.2
015F:  GOTO   16A
0160:  MOVF   47,W
0161:  SUBWF  4B,W
0162:  BTFSS  03.2
0163:  GOTO   16A
0164:  MOVF   46,W
0165:  SUBWF  4A,W
0166:  BTFSS  03.2
0167:  GOTO   16A
0168:  MOVF   45,W
0169:  SUBWF  49,W
016A:  BTFSS  03.0
016B:  GOTO   17B
016C:  MOVF   45,W
016D:  SUBWF  49,F
016E:  MOVF   46,W
016F:  BTFSS  03.0
0170:  INCFSZ 46,W
0171:  SUBWF  4A,F
0172:  MOVF   47,W
0173:  BTFSS  03.0
0174:  INCFSZ 47,W
0175:  SUBWF  4B,F
0176:  MOVF   48,W
0177:  BTFSS  03.0
0178:  INCFSZ 48,W
0179:  SUBWF  4C,F
017A:  BSF    03.0
017B:  RLF    20,F
017C:  RLF    21,F
017D:  RLF    22,F
017E:  RLF    23,F
017F:  DECFSZ 4D,F
0180:  GOTO   153
0181:  MOVF   49,W
0182:  MOVWF  00
0183:  INCF   04,F
0184:  MOVF   4A,W
0185:  MOVWF  00
0186:  INCF   04,F
0187:  MOVF   4B,W
0188:  MOVWF  00
0189:  INCF   04,F
018A:  MOVF   4C,W
018B:  MOVWF  00
*
01E7:  DATA D4,30
01E8:  DATA 6E,10
01E9:  DATA F3,37
01EA:  DATA 3A,10
01EB:  DATA 25,36
01EC:  DATA 75,10
01ED:  DATA 2D,10
01EE:  DATA D4,30
01EF:  DATA EE,29
01F0:  DATA EF,29
01F1:  DATA 53,1D
01F2:  DATA A0,12
01F3:  DATA EC,3A
01F4:  DATA 0D,05
01F5:  DATA 00,00
01F6:  DATA 43,34
01F7:  DATA 6F,10
01F8:  DATA E3,30
01F9:  DATA 69,10
01FA:  DATA E4,30
01FB:  DATA 74,10
01FC:  DATA EC,30
01FD:  DATA 69,10
01FE:  DATA F4,30
01FF:  DATA 6E,10
0200:  DATA F3,37
0201:  DATA A0,39
0202:  DATA 6F,10
0203:  DATA F3,30
0204:  DATA 6E,34
0205:  DATA A1,10
0206:  DATA 8A,06
0207:  DATA 00,00
*
021C:  MOVF   0B,W
021D:  MOVWF  3D
021E:  BCF    0B.7
021F:  BSF    03.5
0220:  BSF    03.6
0221:  BSF    0C.7
0222:  BSF    0C.0
0223:  NOP
0224:  NOP
0225:  BCF    03.5
0226:  BCF    03.6
0227:  BTFSC  3D.7
0228:  BSF    0B.7
0229:  BSF    03.6
022A:  MOVF   0C,W
022B:  ANDLW  7F
022C:  BTFSC  03.2
022D:  GOTO   272
022E:  BCF    03.6
022F:  MOVWF  3D
0230:  BSF    03.6
0231:  MOVF   0D,W
0232:  BCF    03.6
0233:  MOVWF  3E
0234:  BSF    03.6
0235:  MOVF   0F,W
0236:  BCF    03.6
0237:  MOVWF  3F
0238:  MOVF   3D,W
0239:  BTFSS  0C.4
023A:  GOTO   239
023B:  MOVWF  19
023C:  MOVF   3E,W
023D:  BSF    03.6
023E:  MOVWF  0D
023F:  BCF    03.6
0240:  MOVF   3F,W
0241:  BSF    03.6
0242:  MOVWF  0F
0243:  BCF    03.6
0244:  MOVF   0B,W
0245:  MOVWF  40
0246:  BCF    0B.7
0247:  BSF    03.5
0248:  BSF    03.6
0249:  BSF    0C.7
024A:  BSF    0C.0
024B:  NOP
024C:  NOP
024D:  BCF    03.5
024E:  BCF    03.6
024F:  BTFSC  40.7
0250:  BSF    0B.7
0251:  BSF    03.6
0252:  RLF    0C,W
0253:  RLF    0E,W
0254:  ANDLW  7F
0255:  BTFSC  03.2
0256:  GOTO   272
0257:  BCF    03.6
0258:  MOVWF  3D
0259:  BSF    03.6
025A:  MOVF   0D,W
025B:  BCF    03.6
025C:  MOVWF  3E
025D:  BSF    03.6
025E:  MOVF   0F,W
025F:  BCF    03.6
0260:  MOVWF  3F
0261:  MOVF   3D,W
0262:  BTFSS  0C.4
0263:  GOTO   262
0264:  MOVWF  19
0265:  MOVF   3E,W
0266:  BSF    03.6
0267:  MOVWF  0D
0268:  BCF    03.6
0269:  MOVF   3F,W
026A:  BSF    03.6
026B:  MOVWF  0F
026C:  INCF   0D,F
026D:  BTFSC  03.2
026E:  INCF   0F,F
026F:  BCF    03.6
0270:  GOTO   21C
0271:  BSF    03.6
0272:  BCF    03.6
0273:  BCF    0A.3
0274:  GOTO   2DC (RETURN)
....................  
.................... #list 
....................  
.................... #FUSES NOWDT, hs, put, noprotect, mclr 
.................... #use delay(internal= 8M) 
*
0208:  MOVLW  3E
0209:  MOVWF  04
020A:  BCF    03.7
020B:  MOVF   00,W
020C:  BTFSC  03.2
020D:  GOTO   21B
020E:  MOVLW  02
020F:  MOVWF  21
0210:  CLRF   20
0211:  DECFSZ 20,F
0212:  GOTO   211
0213:  DECFSZ 21,F
0214:  GOTO   210
0215:  MOVLW  97
0216:  MOVWF  20
0217:  DECFSZ 20,F
0218:  GOTO   217
0219:  DECFSZ 00,F
021A:  GOTO   20E
021B:  RETURN
.................... #use rs232(BAUD=9600,BITS=8,STOP=1,PARITY=N,RCV=PIN_b5,XMIT=PIN_b7) 
.................... unsigned int16 soXung = 0, tanSoSoSanh = 0, tanSo = 0; 
.................... unsigned int32 tong = 0; 
.................... unsigned char dem = 0, demDLTS = 0; 
.................... int1 enaBuzzer = 0, enaDLTS = 0; 
.................... #define BUZZER  pin_c7 
.................... #define SIGNAL  pin_c5 
.................... #use fast_io(a) 
.................... #use fast_io(c) 
....................  
.................... #INT_RA  
.................... void ngat_dem_xung() 
.................... { 
....................    soXung = soXung + 1; 
*
0059:  MOVLW  01
005A:  ADDWF  30,F
005B:  BTFSC  03.0
005C:  INCF   31,F
.................... } 
005D:  BCF    0B.0
005E:  BCF    0A.3
005F:  GOTO   034
.................... #int_timer1 
.................... void ngat1() 
.................... { 
....................    dem++; 
*
0112:  INCF   3A,F
....................     
....................    if(dem>=3) 
0113:  MOVF   3A,W
0114:  SUBLW  02
0115:  BTFSC  03.0
0116:  GOTO   1DF
....................    { 
....................       tanSo = soXung; 
0117:  MOVF   31,W
0118:  MOVWF  35
0119:  MOVF   30,W
011A:  MOVWF  34
....................       if(enaDLTS) 
011B:  BTFSS  3C.1
011C:  GOTO   19B
....................       { 
....................          demDLTS++; 
011D:  INCF   3B,F
....................          tong  = tong + tanSo; 
011E:  MOVF   34,W
011F:  ADDWF  36,F
0120:  MOVF   35,W
0121:  BTFSC  03.0
0122:  INCFSZ 35,W
0123:  ADDWF  37,F
0124:  MOVLW  00
0125:  BTFSC  03.0
0126:  MOVLW  01
0127:  ADDWF  38,F
0128:  MOVLW  00
0129:  BTFSC  03.0
012A:  MOVLW  01
012B:  ADDWF  39,F
....................          if (demDLTS == 10) 
012C:  MOVF   3B,W
012D:  SUBLW  0A
012E:  BTFSS  03.2
012F:  GOTO   19B
....................          { 
....................             tanSoSoSanh = (tong/10) - 3;  //[-2] hoac [-3] 
0130:  BCF    03.1
0131:  MOVF   39,W
0132:  MOVWF  44
0133:  MOVF   38,W
0134:  MOVWF  43
0135:  MOVF   37,W
0136:  MOVWF  42
0137:  MOVF   36,W
0138:  MOVWF  41
0139:  CLRF   48
013A:  CLRF   47
013B:  CLRF   46
013C:  MOVLW  0A
013D:  MOVWF  45
*
018C:  MOVLW  03
018D:  SUBWF  20,W
018E:  MOVWF  32
018F:  MOVF   21,W
0190:  MOVWF  33
0191:  MOVLW  00
0192:  BTFSS  03.0
0193:  MOVLW  01
0194:  SUBWF  33,F
....................             tong = 0; 
0195:  CLRF   39
0196:  CLRF   38
0197:  CLRF   37
0198:  CLRF   36
....................             demDLTS = 0; 
0199:  CLRF   3B
....................             enaDLTS = 0; 
019A:  BCF    3C.1
....................          } 
....................       } 
....................       if (tanSo <= tanSoSoSanh)   
019B:  MOVF   35,W
019C:  SUBWF  33,W
019D:  BTFSS  03.0
019E:  GOTO   1A8
019F:  BTFSS  03.2
01A0:  GOTO   1A5
01A1:  MOVF   34,W
01A2:  SUBWF  32,W
01A3:  BTFSS  03.0
01A4:  GOTO   1A8
....................       { 
....................          enaBuzzer = 1; 
01A5:  BSF    3C.0
....................          output_high(SIGNAL); 
01A6:  BSF    07.5
....................       } 
01A7:  GOTO   1AA
....................       else 
....................       { 
....................          enaBuzzer = 0; 
01A8:  BCF    3C.0
....................          output_low(SIGNAL); 
01A9:  BCF    07.5
....................       } 
....................      if(enaBuzzer && (!enaDLTS)) 
01AA:  BTFSS  3C.0
01AB:  GOTO   1B1
01AC:  BTFSC  3C.1
01AD:  GOTO   1B1
....................        output_toggle(BUZZER); 
01AE:  MOVLW  80
01AF:  XORWF  07,F
01B0:  GOTO   1B2
....................      else  
....................        output_low(BUZZER); 
01B1:  BCF    07.7
....................  
....................       printf("Tan so: %lu - TanSoSS: %lu\r\n", tanSo, tanSoSoSanh); 
01B2:  MOVLW  E7
01B3:  BSF    03.6
01B4:  MOVWF  0D
01B5:  MOVLW  01
01B6:  MOVWF  0F
01B7:  BCF    03.0
01B8:  MOVLW  08
01B9:  BCF    03.6
01BA:  MOVWF  41
01BB:  CALL   060
01BC:  MOVLW  10
01BD:  MOVWF  04
01BE:  MOVF   35,W
01BF:  MOVWF  42
01C0:  MOVF   34,W
01C1:  MOVWF  41
01C2:  CALL   0B9
01C3:  MOVLW  EC
01C4:  BSF    03.6
01C5:  MOVWF  0D
01C6:  MOVLW  01
01C7:  MOVWF  0F
01C8:  BSF    03.0
01C9:  MOVLW  0C
01CA:  BCF    03.6
01CB:  MOVWF  41
01CC:  CALL   060
01CD:  MOVLW  10
01CE:  MOVWF  04
01CF:  MOVF   33,W
01D0:  MOVWF  42
01D1:  MOVF   32,W
01D2:  MOVWF  41
01D3:  CALL   0B9
01D4:  MOVLW  0D
01D5:  BTFSS  0C.4
01D6:  GOTO   1D5
01D7:  MOVWF  19
01D8:  MOVLW  0A
01D9:  BTFSS  0C.4
01DA:  GOTO   1D9
01DB:  MOVWF  19
....................       soXung = 0; 
01DC:  CLRF   31
01DD:  CLRF   30
....................       dem=0; 
01DE:  CLRF   3A
....................    } 
....................    set_timer1(40536); 
01DF:  CLRF   0E
01E0:  MOVLW  9E
01E1:  MOVWF  0F
01E2:  MOVLW  58
01E3:  MOVWF  0E
01E4:  BCF    0C.0
01E5:  BCF    0A.3
01E6:  GOTO   034
.................... } 
....................  
.................... void main() 
*
0275:  MOVF   03,W
0276:  ANDLW  1F
0277:  MOVWF  03
0278:  MOVLW  71
0279:  BSF    03.5
027A:  MOVWF  0F
027B:  MOVF   0F,W
027C:  BCF    1B.3
027D:  MOVLW  0C
027E:  MOVWF  19
027F:  MOVLW  A2
0280:  MOVWF  18
0281:  MOVLW  90
0282:  BCF    03.5
0283:  MOVWF  18
0284:  CLRF   31
0285:  CLRF   30
0286:  CLRF   33
0287:  CLRF   32
0288:  CLRF   35
0289:  CLRF   34
028A:  CLRF   39
028B:  CLRF   38
028C:  CLRF   37
028D:  CLRF   36
028E:  CLRF   3A
028F:  CLRF   3B
0290:  BCF    3C.0
0291:  BCF    3C.1
0292:  BSF    03.6
0293:  BCF    1F.0
0294:  BCF    1F.1
0295:  BCF    1F.2
0296:  BCF    1F.3
0297:  BCF    03.6
0298:  BCF    1F.6
0299:  MOVLW  00
029A:  BSF    03.6
029B:  MOVWF  1E
029C:  CLRF   19
029D:  CLRF   1A
029E:  BSF    03.5
029F:  CLRF   1E
02A0:  BCF    03.5
02A1:  CLRF   1B
02A2:  BCF    03.6
02A3:  BCF    0D.5
02A4:  BCF    03.7
.................... { 
....................    set_tris_a(0x04); 
02A5:  MOVLW  04
02A6:  BSF    03.5
02A7:  MOVWF  05
....................    set_tris_c(0b00000100); 
02A8:  MOVWF  07
....................     
....................    output_low(BUZZER); 
02A9:  BCF    03.5
02AA:  BCF    07.7
....................    output_low(SIGNAL); 
02AB:  BCF    07.5
....................     
....................    enable_interrupts(global); 
02AC:  MOVLW  C0
02AD:  IORWF  0B,F
....................    enable_interrupts(INT_RA); 
02AE:  BSF    0B.3
02AF:  MOVLW  FF
02B0:  BSF    03.5
02B1:  IORWF  16,F
....................     
....................    enable_interrupts(int_timer1); 
02B2:  BSF    0C.0
....................    setup_timer_1(T1_INTERNAL | T1_DIV_BY_8); 
02B3:  MOVLW  35
02B4:  BCF    03.5
02B5:  MOVWF  10
....................    set_timer1(40536); //0.1s 
02B6:  CLRF   0E
02B7:  MOVLW  9E
02B8:  MOVWF  0F
02B9:  MOVLW  58
02BA:  MOVWF  0E
....................  
....................    tong = 0; 
02BB:  CLRF   39
02BC:  CLRF   38
02BD:  CLRF   37
02BE:  CLRF   36
....................    enaDLTS = 0; 
02BF:  BCF    3C.1
....................    delay_ms(3000); 
02C0:  MOVLW  0C
02C1:  MOVWF  3D
02C2:  MOVLW  FA
02C3:  MOVWF  3E
02C4:  CALL   208
02C5:  DECFSZ 3D,F
02C6:  GOTO   2C2
....................    enaDLTS = 1; 
02C7:  BSF    3C.1
....................     
....................  
....................    while(true) 
....................    { 
....................       if(input(pin_c2)==0) 
02C8:  BTFSC  07.2
02C9:  GOTO   2DE
....................       { 
....................          delay_ms(30); 
02CA:  MOVLW  1E
02CB:  MOVWF  3E
02CC:  CALL   208
....................          if(input(pin_c2)==0) 
02CD:  BTFSC  07.2
02CE:  GOTO   2DC
....................          { 
....................             enaDLTS = 1; 
02CF:  BSF    3C.1
....................             tong = 0; 
02D0:  CLRF   39
02D1:  CLRF   38
02D2:  CLRF   37
02D3:  CLRF   36
....................             demDLTS = 0; 
02D4:  CLRF   3B
....................             printf("Cho cai dat lai tan so so sanh!!\n\r"); 
02D5:  MOVLW  F6
02D6:  BSF    03.6
02D7:  MOVWF  0D
02D8:  MOVLW  01
02D9:  MOVWF  0F
02DA:  BCF    03.6
02DB:  GOTO   21C
....................          }while(input(pin_c2)==0); 
02DC:  BTFSS  07.2
02DD:  GOTO   2DC
....................       } 
02DE:  GOTO   2C8
....................    } 
.................... } 
....................  
02DF:  SLEEP

Configuration Fuses:
   Word  1: 3FE4   INTRC_IO NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN
